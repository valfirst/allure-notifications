plugins {
    id 'java-library'
}

group 'allure.notifications'
version '4.6.0'

java {
    sourceCompatibility = 1.8
}

repositories {
    mavenCentral()
}

dependencies {
    def lombok = '1.18.30'

    annotationProcessor("org.projectlombok:lombok:$lombok")
    compileOnly("org.projectlombok:lombok:$lombok")

    implementation platform('org.slf4j:slf4j-bom:2.0.9')
    implementation('org.slf4j:slf4j-api')
    implementation('org.slf4j:jul-to-slf4j')   // Java Util Logging -> SLF4J
    implementation('org.slf4j:jcl-over-slf4j') // commons-logging -> SLF4J

    implementation('com.sun.mail:jakarta.mail:2.0.1')
    implementation('com.konghq:unirest-java:3.14.5')
    implementation('org.freemarker:freemarker:2.3.32')
    implementation('org.knowm.xchart:xchart:3.8.5')
    implementation('com.jayway.jsonpath:json-path:2.8.0')
    implementation('org.apache.commons:commons-lang3:3.13.0')

    testImplementation('org.junit.jupiter:junit-jupiter:5.10.1')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
    testImplementation('org.mockito:mockito-junit-jupiter:4.11.0')
}

configurations.all {
    exclude module: 'commons-logging' // Use jcl-over-slf4j bridge instead
}

tasks.withType(JavaCompile) {
    System.getProperties()
    options.encoding = 'UTF-8'
}
tasks.named('test') {
    useJUnitPlatform()
}

// Checkstyle requires Java 11 starting from 10.0
if (JavaVersion.current().isJava11Compatible()) {
    apply plugin: 'checkstyle'

    checkstyle {
        toolVersion = '10.12.5'
        ignoreFailures = false
        showViolations = true
    }
    
    tasks.withType(Checkstyle) {
        reports {
            xml.required = false
            html.required = false
        }
    }
}
